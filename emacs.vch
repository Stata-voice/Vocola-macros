# Voice commands for Emacs

do(command) := {Alt+x} $command {Enter};
elisp(e) := {Alt+:} $e {Enter};

# ---------------------------------------------------------------------------
# Buffer and File Manipulation

include folders.vch;
include   files.vch;
 
Buffer <file>        = {Ctrl+x}{Ctrl+f} $1 {Enter};
Buffer <file> Revert = {Ctrl+x}{Ctrl+f} $1 {Enter}
                       do(revert-buffer) yes{Enter};
Switch Buffer = {Ctrl+x}{b}{Enter};
Switch Buffer         1..20 =        {Ctrl+x}{Ctrl+b}{Down_$1} " ";
I Meant Switch Buffer 1..20 = {Alt+o}{Ctrl+x}{Ctrl+b}{Down_$1} " ";
Kill Buffer        = {Ctrl+x}k{Enter};
Two Buffers        = {Ctrl+x}2;
Two Buffers Across = {Ctrl+x}3;
One Buffer         = {Ctrl+x}1;
Other Buffer       = {Ctrl+x}o;
One Other Buffer   = {Ctrl+x}0;
Buffer List        = {Ctrl+x}{Ctrl+b};
Revert Buffer = do(revert-buffer) yes{Enter};
Revert Buffer Hard = {Ctrl+x}{Ctrl+v}{Enter};
Buffer Shell = do(shell);
Buffer (scratch|compilation) = {Ctrl+x}b *$1* {Enter};
[Toggle] Read Only = {Ctrl+x}{Ctrl+q};
[Toggle] Fill Mode = do(auto-fill-mode);
[Toggle] (Overwrite|Overstrike) Mode = do(overwrite-mode);

Open File  = {Ctrl+x}{Ctrl+f};
Save (File={Ctrl+s} | All=s | As={Ctrl+w}) = {Ctrl+x} $1;
Open File <folder> = {Ctrl+x}{Ctrl+f}{Ctrl+a}{Ctrl+k} $1/;
Save As   <folder> = {Ctrl+x}{Ctrl+w}{Ctrl+a}{Ctrl+k} $1/;
Wrong File = {Ctrl+x}{Ctrl+v};
Recover File = do(recover-file) {Enter}yes{Enter};
Make Directory = do(make-directory) {Enter};

Reload Dot Emacs = do(load-library) ~/.emacs{Enter};
(Exit Emacs | Close Window) = {Ctrl+x}{Ctrl+c};

I Meant Edit Machine Commands =
    {Alt+k} SendSystemKeys({Alt+Tab}) HeardWord(Edit, Machine, Commands);

# ---------------------------------------------------------------------------
# Straight mouse grid commands inspired by Kim Patch

include utilities.vch;

<n> := 0..99;
<n> <n> ( Paste     = {Ctrl+y}
        | Mark      = {Ctrl+Space}
        | Copy      = {Alt+w}
        | Kill      = {Ctrl+w}
        | Duplicate = {Alt+w}{Ctrl+y}
        | Kill Line      = {Ctrl+a}{Ctrl+Space}{Ctrl+n}{Ctrl+w}
        | Copy Line      = {Ctrl+a}{Ctrl+Space}{Ctrl+n}{Alt+w}

<number> := 1..99;

execute(statement) := {Alt+x} $statement {Enter};
executeAndStayPut(statement):= execute("set-mark-command") execute(statement) execute("pop-global-mark");

left = {Ctrl+b};
right = {Ctrl+f};
up = {Ctrl+p};
down = {Ctrl+n};


# Words
word = {Alt+f};
back = {Alt+b};
<number> words right = {Ctrl+u} $1 {Alt+f};
<number> words left = {Ctrl+u} $1 {Alt+b};
delete  word = {Alt+b} {Alt+d};
delete previous <number> words = {Ctrl+u} $1 {Alt+b} {Ctrl+u} $1 {Alt+d};
delete next <number> words = {Ctrl+u} $1 {Alt+d};
delete previous word = {Alt+b} {Alt+d};
delete next word = {Alt+d};

open file = {Ctrl+x}{Ctrl+f};
find file = {Ctrl+c} {p} {f};
save  = {Ctrl+x} {Ctrl+s};
exit = {Ctrl+x} {Ctrl+c};
window = {Ctrl+x}o;
buffer = {Ctrl+x}b;
previous buffer = {Ctrl+x}{Left};
next buffer = {Ctrl+x}{Right};

shut = {Ctrl+x}k;
pull open <number> times = {Ctrl+u} $1 {Ctrl+x}"+";
boom = {Enter};
undo = {Ctrl+/};
die = {Alt+Backspace};
stab = {Alt+d};
hack = {Backspace};
capture = {Ctrl+w};
copy = {Alt+w};
mark = {Ctrl+Space};
go to beginning= {Alt+<};
Go to (bottom|end)= {Alt+>};

cancel = {Ctrl+g};

close buffer = execute("kill-this-buffer");
list buffers = {Ctrl+x} {Ctrl+b};

scroll down = {Ctrl+v};
scroll up = {Ctrl+v};
cut = {Ctrl+k};
cut <number> times = {Ctrl+u} $1 {Ctrl+k};
yank = {Ctrl+y};
cycle = {Alt+y};

climb = {Ctrl+r};
fall = {Ctrl+s};

# split windows
emacs split horizontally = {Ctrl+x} 2;
emacs split vertically = {Ctrl+x} 3;
next pain = {Ctrl+x} o;
Close pain = {Ctrl+x} 0;
balance pains = {Ctrl+x} "+";

# Packages
list packages = execute("package-list-packages");
Neo tree = execute("neotree-toggle");

# Lines
delete line = execute("kill-whole-line");
line start = {Ctrl+a};
line end = {Ctrl+e};
kill here = {Ctrl+k};

#Git
emacs git status = execute("magit-status");
refresh = {Ctrl+x}g;
finalize commit = {Ctrl+c} {Ctrl+c};

Format that = execute("set-mark-command") execute("mark-whole-buffer") execute("indent-region") execute("pop-global-mark");
Comment that=execute ("comment-region");
uncomment that = execute("uncomment-region");
Evaluate buffer = execute("eval-buffer");
revert buffer = execute("revert-buffer");

#Locations
Emacs config location = "/root/.emacs.d/personal/";

# Utility commands
toggle quotes = execute("toggle-quotes");